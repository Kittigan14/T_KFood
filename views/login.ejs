<!DOCTYPE html>
<html lang="th">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>เข้าสู่ระบบ</title>
  <link rel="stylesheet" href="/css/base.css">
  <link rel="stylesheet" href="/css/auth.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
  <div class="form-box">
    <h2>เข้าสู่ระบบ</h2>
    <form id="loginForm" class="form">
      <input type="email" name="email" placeholder="อีเมล" required>
      <div class="password-wrapper">
        <input type="password" name="password" id="loginPassword" placeholder="รหัสผ่าน" required>
        <span class="toggle-password" data-target="loginPassword">
          <img src="/images/icon/eye.png" alt="toggle">
        </span>
      </div>
      <button type="submit" class="btn-submit">เข้าสู่ระบบ</button>
    </form>
    <p>ยังไม่มีบัญชี? <a href="/register">สมัครสมาชิก</a></p>
  </div>

  <script>
    document.querySelectorAll(".toggle-password").forEach(btn => {
      btn.addEventListener("click", function () {
        const targetId = this.getAttribute("data-target");
        const input = document.getElementById(targetId);
        const img = this.querySelector("img");

        if (input.type === "password") {
          input.type = "text";
          img.src = "/images/icon/eye-crossed.png";
        } else {
          input.type = "password";
          img.src = "/images/icon/eye.png";
        }
      });
    });

    const inputs = document.querySelectorAll('input');
    inputs.forEach(input => {
      input.addEventListener('blur', function () {
        this.style.borderColor = this.validity.valid ? '#10b981' : '#ef4444';
      });
    });

    document.getElementById('loginForm').addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(e.target);
      const email = formData.get('email');
      const password = formData.get('password');

      const submitButton = e.target.querySelector('button[type="submit"]');
      const originalText = submitButton.textContent;

      submitButton.disabled = true;
      submitButton.textContent = 'กำลังเข้าสู่ระบบ...';
      submitButton.classList.add('loading');

      try {
        const response = await fetch('/api/auth/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            email,
            password
          })
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire({
            icon: "success",
            title: "เข้าสู่ระบบสำเร็จ",
            text: data.redirectTo === '/admin' ? "ยินดีต้อนรับสู่ระบบ Admin" : "ยินดีต้อนรับ",
            timer: 1500,
            showConfirmButton: false
          }).then(() => {
            window.location.href = data.redirectTo || '/';
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "เข้าสู่ระบบไม่สำเร็จ",
            text: data.error || "อีเมลหรือรหัสผ่านไม่ถูกต้อง"
          });
        }
      } catch (error) {
        console.error('Login error:', error);
        Swal.fire({
          icon: "error",
          title: "เกิดข้อผิดพลาด",
          text: "ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้"
        });
      } finally {
        submitButton.disabled = false;
        submitButton.textContent = originalText;
        submitButton.classList.remove('loading');
      }
    });

    function showNotification(message, type = 'info') {
      let notification = document.getElementById('notification');
      if (!notification) {
        notification = document.createElement('div');
        notification.id = 'notification';
        notification.className = 'notification';
        notification.style.cssText = `
                    position: fixed; top: 20px; right: 20px; 
                    padding: 15px 25px; border-radius: 8px; 
                    color: white; font-weight: 600; z-index: 10000;
                    transform: translateX(400px); transition: transform 0.3s;
                `;
        document.body.appendChild(notification);
      }

      notification.textContent = message;
      notification.style.backgroundColor = type === 'error' ? '#e74c3c' :
        type === 'success' ? '#10b981' : '#3498db';
      notification.classList.add('show');
      notification.style.transform = 'translateX(0)';

      setTimeout(() => {
        notification.style.transform = 'translateX(400px)';
        setTimeout(() => notification.classList.remove('show'), 300);
      }, 3000);
    }
  </script>
</body>

</html>